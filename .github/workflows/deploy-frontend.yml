name: Build & Deploy frontend to Netlify

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install netlify-cli
        run: npm install -g netlify-cli

      - name: Install Rust stable and wasm target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true

      - name: Install latest Dioxus CLI
        run: |
          # Install the latest Dioxus CLI that supports Cargo.lock v4
          cargo install dioxus-cli --git https://github.com/DioxusLabs/dioxus --branch main

      - name: Build Dioxus web app
        run: |
          cd ephemeral_web
          echo "Building Dioxus app with dx command..."
          dx build --release --platform web
          echo "Dioxus build completed."

      - name: Prepare deployment files
        run: |
          cd ephemeral_web
          echo "Preparing dist directory..."

          # Create dist directory
          mkdir -p dist/pkg

          # Look for the built files in the expected Dioxus locations
          echo "Looking for built files..."

          # Check the standard Dioxus build output location
          DX_BUILD_DIR="target/dx/ephemeral_web/release/web/public"
          if [ -d "$DX_BUILD_DIR" ]; then
            echo "Found Dioxus build output, copying files..."
            cp -r "$DX_BUILD_DIR"/* dist/
          else
            echo "Dioxus build directory not found at $DX_BUILD_DIR"
            echo "Checking for alternative locations..."
            
            # Look for files in target directory
            find target -name "*.wasm" -exec cp {} dist/pkg/ \; 2>/dev/null || echo "No WASM files found"
            find target -name "*.js" -exec cp {} dist/pkg/ \; 2>/dev/null || echo "No JS files found"
            
            # Copy essential files
            cp index.html dist/ 2>/dev/null || echo "No index.html to copy"
            
            # Copy assets if they exist
            if [ -d "assets" ]; then
              cp -r assets/* dist/ 2>/dev/null || echo "No assets to copy"
            fi
          fi

          # List what we have
          echo "Contents of dist directory:"
          ls -la dist/
          echo "Contents of dist/pkg directory:"
          ls -la dist/pkg/ 2>/dev/null || echo "No pkg directory"

          # Add redirects for SPA routing
          echo "/*    /index.html   200" > dist/_redirects

          echo "Final dist contents:"
          ls -la dist/

      - name: Deploy to Netlify
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          cd ephemeral_web
          echo "Deploying these files to Netlify:"
          ls -la dist/

          netlify deploy --dir=dist --auth "$NETLIFY_AUTH_TOKEN" --site "$NETLIFY_SITE_ID" --prod
