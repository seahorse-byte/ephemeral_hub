name: Build & Deploy frontend to Netlify

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install netlify-cli
        run: npm install -g netlify-cli

      - name: Install Rust stable and wasm target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true

      - name: Install Dioxus CLI
        run: cargo install dioxus-cli --version 0.5.1

      - name: Build Dioxus web app
        run: |
          cd ephemeral_web
          echo "Building Dioxus app..."
          dx build --release --platform web
          echo "Build completed."

      - name: Prepare deployment files
        run: |
          cd ephemeral_web
          echo "Preparing dist directory..."

          # Create dist directory if it doesn't exist
          mkdir -p dist

          # Copy built files from the expected Dioxus output location
          BUILD_SOURCE="target/dx/ephemeral_web/release/web/public"
          if [ -d "$BUILD_SOURCE" ]; then
            echo "Copying from Dioxus build output..."
            cp -r "$BUILD_SOURCE"/* dist/
          else
            echo "Dioxus build output not found at $BUILD_SOURCE"
            echo "Looking for alternative locations..."
            find . -path "*/target/*/web/public" -type d | while read dir; do
              echo "Found alternative: $dir"
              cp -r "$dir"/* dist/
              break
            done
          fi

          # Ensure we have essential files
          if [ ! -f "dist/index.html" ]; then
            echo "index.html not found, copying from source..."
            cp index.html dist/ 2>/dev/null || echo "No index.html in source"
          fi

          # Add redirects for SPA routing
          echo "/*    /index.html   200" > dist/_redirects

          echo "Final dist contents:"
          ls -la dist/

      - name: Deploy to Netlify
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          cd ephemeral_web
          if [ ! -d "dist" ] || [ -z "$(ls -A dist)" ]; then
            echo "ERROR: Dist directory is empty or missing"
            ls -la
            exit 1
          fi

          echo "Deploying these files to Netlify:"
          ls -la dist/

          netlify deploy --dir=dist --auth "$NETLIFY_AUTH_TOKEN" --site "$NETLIFY_SITE_ID" --prod
